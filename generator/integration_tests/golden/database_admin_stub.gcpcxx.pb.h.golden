// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: generator/integration_tests/test.proto
#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TEST_INTERNAL_DATABASE_ADMIN_STUB_GCPCXX_PB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TEST_INTERNAL_DATABASE_ADMIN_STUB_GCPCXX_PB_H

#include "google/cloud/backoff_policy.h"
#include "google/cloud/connection_options.h"
#include "google/cloud/internal/retry_policy.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "grpcpp/security/credentials.h"
#include <generator/integration_tests/test.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace test_internal {
inline namespace TEST_CLIENT_NS {

class DatabaseAdminStub {
 public:
  virtual ~DatabaseAdminStub() = 0;

  /// Poll a long-running operation.
  virtual StatusOr<google::longrunning::Operation> GetOperation(
      grpc::ClientContext& client_context,
      google::longrunning::GetOperationRequest const& request) = 0;

  /// Cancel a long-running operation.
  virtual Status CancelOperation(
      grpc::ClientContext& client_context,
      google::longrunning::CancelOperationRequest const& request) = 0;

};  // DatabaseAdminStub

}  // namespace TEST_CLIENT_NS
}  // namespace test_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_TEST_INTERNAL_DATABASE_ADMIN_STUB_GCPCXX_PB_H
